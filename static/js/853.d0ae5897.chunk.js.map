{"version":3,"file":"static/js/853.d0ae5897.chunk.js","mappings":"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","sources":["components/API/API.jsx","components/Loader/Loader.jsx","components/StyledPages/Movies.styled.js","components/Search/Search.styled.js","components/Search/Search.jsx","components/pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '0e93aabbe6940ffc57eaa3a18a147920';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport async function getPopularMovies(page = 1) {\n  const url = `${BASE_URL}/trending/movie/day?api_key=${KEY}&page=${page}`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\ngetPopularMovies();\n\nexport async function getAllMovies(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\n\nexport async function getSearchMovies(query) {\n  const url = `${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&query=${query}`;\n  const response = await axios.get(url);\n  return response.data.results;\n}\nexport async function getCast(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data;\n}\nexport async function infoActor(movieId) {\n  const url = `${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}`;\n  const { data } = await axios.get(url);\n  return data.results;\n}\n","import { ColorRing } from 'react-loader-spinner';\n// import 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Loader = ({ loading }) => (\n  <div>\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n    ;\n  </div>\n);\nLoader.propTypes = {\n  loading: PropTypes.bool,\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Section = styled.section`\n  padding: 120px 20px;\n  margin: 0 auto;\n  max-width: 1280px;\n`;\nexport const UlSearch = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  gap: 20px;\n  list-style: none;\n  padding: 0px;\n  margin: 0px;\n  margin: 0 auto;\n`;\nexport const Li = styled.li`\n  width: 250px;\n  :hover,\n  :focus {\n    scale: 1.1;\n    transition: all 0.8s 0s ease-in-out;\n  }\n`;\nexport const Div = styled.div`\n  padding-top: 8px;\n  width: 200px;\n`;\nexport const Text = styled.p`\n  margin: 0 0 10px 0;\n  font-size: 18px;\n`;\nexport const LinkList = styled(Link)`\n  font-size: 24px;\n  text-decoration: none;\n  display: inline-block;\n  cursor: pointer;\n  color: #000;\n  :hover,\n  :focus {\n    color: #fff;\n    transition: all 0.35s cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\nexport const P = styled.p`\n  text-align: center;\n  text-shadow: 4px 4px 2px rgba(150, 150, 150, 1);\n  font-size: 40px;\n`;\nexport const Pred = styled.p`\n  text-align: center;\n  text-shadow: 4px 4px 2px rgba(150, 150, 150, 1);\n  font-size: 50px;\n  font-weight: bold;\n  color: red;\n`;\nexport const Img = styled.img`\n  width: 100%;\n  height: auto;\n  display: block;\n  border-radius: 5px;\n`;\nexport const TitleFilm = styled.h3`\n  margin: 0 0 10px 0;\n  font-size: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 50px;\n`;\nexport const Form = styled.form`\n  display: inline-flex;\n  align-items: center;\n  gap: 12px;\n`;\n\nexport const Input = styled.input`\n  padding: 8px 8px 8px 10px;\n  border-radius: 10px;\n  font-size: 22px;\n  width: 300px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  margin-right: auto;\n  margin-left: auto;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 1), -23px 0 20px -23px rgba(0, 0, 0, 0.8),\n    23px 0 20px -23px rgba(0, 0, 0, 0.8), 0 0 40px rgba(0, 0, 0, 0.1) inset;\n  gap: 8px;\n  padding: 10px;\n  border-radius: 10px;\n  text-decoration: none;\n  color: #2a2a2a;\n  font-size: 16px;\n  font-weight: 700;\n\n  &:hover,\n  :focus {\n    background-color: #218657;\n    color: #ffffff;\n    cursor: pointer;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport * as SC from './Search.styled';\nimport { getSearchMovies } from 'components/API/API';\nimport { Outlet } from 'react-router-dom';\nimport { Suspense } from 'react';\nimport { Loader } from 'components/Loader/Loader';\nimport { FcSearch } from 'react-icons/fc';\n\nexport const Search = ({ setSearchMovies }) => {\n  const [searchQuery, setSearchQuery] = useSearchParams();\n  const movieQuery = searchQuery.get('query') ?? '';\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n    const query = form.elements.search.value;\n    if (query.trim() === '') {\n      toast.error('Please, enter the Name Movie');\n      return;\n    }\n    setSearchQuery({ query });\n    form.reset();\n  };\n\n  useEffect(() => {\n    if (!movieQuery) return;\n\n    async function fetchFilms() {\n      const dataFilms = await getSearchMovies(movieQuery);\n\n      const requiredDataFilms = dataFilms.map(\n        ({ id, title, poster_path: poster, vote_average }) => ({\n          id,\n          title,\n          poster: 'https://image.tmdb.org/t/p/w500' + poster,\n          vote_average,\n        })\n      );\n      setSearchMovies(requiredDataFilms);\n    }\n    fetchFilms();\n  }, [movieQuery, setSearchMovies]);\n\n  return (\n    <SC.Div>\n      <SC.Form onSubmit={handleSubmit}>\n        <SC.Input\n          type=\"text\"\n          name=\"search\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <SC.Button type=\"submit\">\n          Search\n          <FcSearch size=\"20px\" />\n        </SC.Button>\n      </SC.Form>\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </SC.Div>\n  );\n};\n","import React from 'react';\nimport { useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport * as SC from '../StyledPages/Movies.styled';\nimport { Search } from 'components/Search/Search';\nimport { FaRegSadCry } from 'react-icons/fa';\n\nexport const Movies = () => {\n  const [searchMovies, setSearchMovies] = useState('');\n  const location = useLocation();\n\n  return (\n    <main>\n      <SC.Section>\n        <Search setSearchMovies={setSearchMovies} />\n\n        {searchMovies !== '' ? (\n          <div>\n            <SC.UlSearch>\n              {searchMovies.map(({ id, poster, title, vote_average }) => (\n                <SC.Li key={id}>\n                  <SC.LinkList to={`/movies/${id}`} state={{ from: location }}>\n                    <SC.Img\n                      src={\n                        poster &&\n                        poster !== 'https://image.tmdb.org/t/p/w500null'\n                          ? poster\n                          : 'https://i.i.ua/cards/pic/6/4/242946.jpg'\n                      }\n                      alt={title}\n                      width=\"200\"\n                      height=\"240\"\n                    />\n                    <SC.Div>\n                      <SC.TitleFilm>{title} </SC.TitleFilm>\n                      {vote_average !== 0 && (\n                        <SC.Text>Rating: {vote_average.toFixed(1)}</SC.Text>\n                      )}\n                    </SC.Div>\n                  </SC.LinkList>\n                </SC.Li>\n              ))}\n            </SC.UlSearch>\n          </div>\n        ) : (\n          <SC.P>No movies... Try to find something</SC.P>\n        )}\n\n        {searchMovies.length === 0 && searchMovies !== '' && (\n          <SC.Pred>\n            There is no movies with that name <FaRegSadCry size=\"50\" />\n          </SC.Pred>\n        )}\n      </SC.Section>\n    </main>\n  );\n};\n"],"names":["KEY","BASE_URL","getPopularMovies","page","url","axios","data","results","getAllMovies","movieId","getSearchMovies","query","response","getCast","infoActor","Loader","loading","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Section","styled","UlSearch","Li","Div","Text","LinkList","Link","P","Pred","Img","TitleFilm","Form","Input","Button","Search","setSearchMovies","useSearchParams","searchQuery","setSearchQuery","movieQuery","get","useEffect","dataFilms","requiredDataFilms","map","id","title","poster","poster_path","vote_average","fetchFilms","onSubmit","event","preventDefault","form","currentTarget","elements","search","value","trim","reset","toast","type","name","autoComplete","autoFocus","placeholder","size","Suspense","fallback","Movies","useState","searchMovies","location","useLocation","to","state","from","src","alt","toFixed","length"],"sourceRoot":""}